trigger:
- master

strategy:
  matrix:
    linux_go_1_11:
      imageName: ubuntu-16.04
      goVersion: 1.11
    linux_go_1_12:
      imageName: ubuntu-16.04
      goVersion: 1.12
    mac_go1_12:
      imageName: macOS-10.14
      goVersion: 1.12.5

pool:
  vmImage: $(imageName)

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go$(goVersion)' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    go build -v .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0
    golangci-lint run -v
  workingDirectory: '$(modulePath)'
  displayName: 'Get golangci-lint, then lint'
